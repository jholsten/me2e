services:
  backend-api:
    image: gitlab.informatik.uni-bremen.de:5005/master-thesis1/test-system/backend-api:latest
    ports:
      - 8000
    environment:
      DB_PASSWORD: 123
      DB_USER: user
      REQUESTS_CA_BUNDLE: /usr/local/share/ca-certificates/mock_server_certificate.pem
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8000/health || exit 1" ]
      interval: 3s
      timeout: 3s
      retries: 10
    extra_hosts:
      - "payment.example.com:${RUNNER_IP:-host-gateway}"
    volumes:
      - "./mock_server_certificate.pem:/usr/local/share/ca-certificates/mock_server_certificate.pem"
    labels:
      "org.jholsten.me2e.container-type": "MICROSERVICE"
      "org.jholsten.me2e.pull-policy": "ALWAYS"

  database:
    image: postgres:12
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: 123
      POSTGRES_USER: user
      POSTGRES_DB: testdb
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'" ]
      interval: 3s
      timeout: 3s
      retries: 10
    labels:
      "org.jholsten.me2e.container-type": "DATABASE"
      "org.jholsten.me2e.database.system": "POSTGRESQL"

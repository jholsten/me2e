/*
 * Build configuration for the library.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2/userguide/building_java_projects.html
 * in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the Maven plugin for publishing the library.
    id 'maven-publish'

    // Required for mapstruct
    id "org.jetbrains.kotlin.kapt" version "1.8.20"

    // Apply Dokka Plugin to support generation of Kotlin documentation
    id "org.jetbrains.dokka" version "1.6.0"
}

group = "org.jholsten"
version = System.getenv("VERSION_NUMBER") ?: "0.0.1"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

/**
 * Configuration for publishing the library to the GitLab Package Registry using GitLab CI/CD.
 */
publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "https://gitlab.informatik.uni-bremen.de/api/v4/projects/33508/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Job-Token"
                value = System.getenv("CI_JOB_TOKEN")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"

    // Dependency for extended mocking
    testImplementation 'io.mockk:mockk:1.13.4'

    // Use the JUnit 5 integration.
    implementation "org.junit.jupiter:junit-jupiter-engine:5.9.2"
    implementation "org.junit.platform:junit-platform-launcher:1.10.1"

    // Dependency for recursive comparison in tests
    testImplementation "org.assertj:assertj-core:3.24.2"

    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    // Dependency for parameterized tests
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.2"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api "org.apache.commons:commons-math3:3.6.1"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:31.1-jre"

    // Dependency for executing HTTP requests
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    testImplementation "org.apache.httpcomponents.core5:httpcore5:5.1.3"

    // Dependency for Kotlin support for Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Dependency for parsing YAML files
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2"

    // Dependency for validating data using JSON schema
    implementation "com.networknt:json-schema-validator:1.0.86"

    // Dependency for mapping DTOs
    implementation "org.mapstruct:mapstruct:1.5.2.Final"
    kapt "org.mapstruct:mapstruct-processor:1.5.2.Final"

    // Dependency for utils
    implementation "org.apache.commons:commons-lang3:3.12.0"

    // Dependency for mocking web servers
    implementation "com.github.tomakehurst:wiremock-jre8:2.35.0"

    // Dependency for awaiting events
    implementation "org.awaitility:awaitility:4.1.0"

    // Dependencies for logging
    implementation "ch.qos.logback:logback-core:1.4.14"
    implementation "ch.qos.logback:logback-classic:1.4.14"
    implementation "org.slf4j:slf4j-api:2.0.9"

    // Dependency for formatting tables
    implementation "de.m3y.kformat:kformat:0.10"

    // Dependency for managing docker containers
    implementation "org.testcontainers:testcontainers:1.19.3"

    // Dependency for scanning annotations
    implementation "io.github.classgraph:classgraph:4.8.165"

    // Dependency for registering and testing annotation processors
    implementation "com.google.auto.service:auto-service:1.1.1"
    kapt "com.google.auto.service:auto-service:1.1.1"
    testImplementation "com.google.testing.compile:compile-testing:0.21.0"

    // Dependencies for database connections
    implementation "com.mysql:mysql-connector-j:8.2.0"
    implementation "org.postgresql:postgresql:42.7.1"
    implementation "org.mariadb.jdbc:mariadb-java-client:3.3.2"
    implementation "org.mongodb:mongodb-driver-sync:4.11.1"
    implementation "org.mybatis:mybatis:3.5.7"
}

// Configuration for documentation
dokkaHtml {
    dokkaSourceSets {
        configureEach {
            includeNonPublic.set(false)
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
    withSourcesJar()
    withJavadocJar()
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    // Show log output while running tests
    testLogging.showStandardStreams = true
    testLogging.showStackTraces = true
    // Delete ReportGeneratingListener for internal tests
    systemProperty("junit.platform.execution.listeners.deactivate", "org.jholsten.me2e.report.ReportGeneratingListener")
}

/*
 * Build configuration for the library.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2/userguide/building_java_projects.html
 * in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the Maven plugin for publishing the library.
    id 'maven-publish'

    // Required for mapstruct
    id "org.jetbrains.kotlin.kapt" version "1.8.20"
}

group = "org.jholsten"
version = System.getenv("VERSION_NUMBER") ?: "0.0.1"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

/**
 * Configuration for publishing the library to the GitLab Package Registry using GitLab CI/CD.
 */
publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "https://gitlab.informatik.uni-bremen.de/api/v4/projects/33508/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Job-Token"
                value = System.getenv("CI_JOB_TOKEN")
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"

    // Dependency for extended mocking
    testImplementation 'io.mockk:mockk:1.13.4'

    // Use the JUnit 5 integration.
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.9.2"

    // Dependency for recursive comparison in tests
    testImplementation "org.assertj:assertj-core:3.24.2"

    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    // Dependency for parameterized tests
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.2"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api "org.apache.commons:commons-math3:3.6.1"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:31.1-jre"

    // Dependency for executing HTTP requests
    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    // Dependency for Kotlin support for Jackson
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"

    // Dependency for parsing YAML files
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2"

    // Dependency for validating data using JSON schema
    implementation "com.networknt:json-schema-validator:1.0.86"

    // Dependency for mapping DTOs
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    kapt 'org.mapstruct:mapstruct-processor:1.5.2.Final'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

tasks.named("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

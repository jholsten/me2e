variables:
  DOCKER_TLS_CERTDIR: ""
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle

stages:
  - build
  - test
  - publish

# Enable cache to save dependencies until gradle-wrapper properties changed:
cache:
  key:
    files:
      - gradle/wrapper/gradle-wrapper.properties
  paths:
    - .gradle/wrapper
    - .gradle/caches

# Builds package and uploads cache
build:
  stage: build
  image: openjdk:17.0.2-jdk-slim
  before_script:
    - chmod +x ./gradlew
  script:
    - ./gradlew --build-cache assemble
    - ./gradlew --stop

# Runs JUnit tests inside Docker container (required to have access to Docker and Docker-Compose)
test:
  stage: test
  image: docker:20.10.20
  services:
    - name: docker:20.10.20-dind
      alias: docker
      command: [ "--tls=false" ]
  before_script:
    - chmod +x ./gradlew
  script:
    - docker login -u REGISTRY_TOKEN -p $REGISTRY_TOKEN $CI_REGISTRY
    - cat /root/.docker/config.json
    - cp /root/.docker/config.json $CI_PROJECT_DIR/config.json
    - cat $CI_PROJECT_DIR/config.json
    - export DOCKER_AUTH_CONFIG=$(cat $CI_PROJECT_DIR/config.json)
    - echo $DOCKER_AUTH_CONFIG
    - docker run --rm -v $PWD:$PWD -w $PWD
      -v /var/run/docker.sock:/var/run/docker.sock
      -v $CI_PROJECT_DIR/config.json:/root/.docker/config.json
      --add-host=host.docker.internal:host-gateway
      -e GRADLE_USER_HOME=$CI_PROJECT_DIR/.gradle
      $CI_REGISTRY_IMAGE:test
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml

# Publishes package to GitLab Package Registry:
publish-package:
  stage: publish
  image: openjdk:17.0.2-jdk-slim
  before_script:
    - export VERSION_NUMBER=$CI_COMMIT_TAG
    - chmod +x ./gradlew
  script:
    - ./gradlew clean publish
  only:
    - tags

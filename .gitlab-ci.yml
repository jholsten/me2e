variables:
  DOCKER_TLS_CERTDIR: ""
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  DOCKER_DRIVER: overlay2

stages:
  - build
  - test
  - publish

# Enable cache to save dependencies until gradle-wrapper properties changed:
cache:
  key:
    files:
      - gradle/wrapper/gradle-wrapper.properties
  paths:
    - .gradle/wrapper
    - .gradle/caches
  policy: pull-push

# Builds package and uploads cache
build:
  stage: build
  image: openjdk:17.0.2-jdk-slim
  before_script:
    - chmod +x ./gradlew
  script:
    - ./gradlew --build-cache assemble

# Builds and pushes Dockerfile on changes
build-docker:
  stage: build
  image: docker:20.10.20
  services:
    - name: docker:20.10.20-dind
      alias: docker
      command: [ "--tls=false" ]
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg OPENJDK_VERSION=17.0.2 -t $CI_REGISTRY_IMAGE:17.0.2 .
    - docker build --build-arg OPENJDK_VERSION=18.0.2.1 -t $CI_REGISTRY_IMAGE:18.0.2.1 .
    - docker push $CI_REGISTRY_IMAGE:17.0.2 .
    - docker push $CI_REGISTRY_IMAGE:18.0.2.1 .
  rules:
    - changes:
        - Dockerfile

# Runs JUnit tests inside Docker container (required to have access to Docker and Docker-Compose)
test:
  stage: test
  image: $CI_REGISTRY_IMAGE:17.0.2
  services:
    - name: docker:20.10.20-dind
      alias: docker
      command: [ "--tls=false" ]
  before_script:
    - chmod +x ./gradlew
  script:
    - docker login -u REGISTRY_TOKEN -p $REGISTRY_TOKEN $CI_REGISTRY
    - export RUNNER_IP=$(hostname -I)
    - ./gradlew --build-cache test
  variables:
    DOCKER_HOST: "tcp://docker:2375"
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml

# Publishes package to GitLab Package Registry:
publish-package:
  stage: publish
  image: openjdk:17.0.2-jdk-slim
  before_script:
    - export VERSION_NUMBER=$CI_COMMIT_TAG
    - chmod +x ./gradlew
  script:
    - ./gradlew clean publish
  only:
    - tags

# Publishes KDoc and JSON schemas to GitLab pages
pages:
  stage: publish
  image: openjdk:17.0.2-jdk-slim
  before_script:
    - export VERSION_NUMBER=$CI_COMMIT_TAG
    - chmod +x ./gradlew
  script:
    - ./gradlew --build-cache dokkaHtml
    - mkdir -p public/kdoc
    - cp -Rp build/dokka/html/* public/kdoc/
    - mkdir -p public/json-schemas
    - cp -p src/main/resources/config_schema.json public/json-schemas/config_schema.json
    - cp -p src/main/resources/stub_schema.json public/json-schemas/stub_schema.json
    - cp -p src/main/resources/jsonSchemas.xml public/json-schemas/jsonSchemas.xml
  artifacts:
    paths:
      - public
  only:
    - tags
